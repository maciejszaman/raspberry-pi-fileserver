{"version":3,"sources":["../src/components/MessageBar/useMessageBarReflow.ts"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\n\nexport function useMessageBarReflow(enabled: boolean = false) {\n  const { targetDocument } = useFluent();\n  const prevInlineSizeRef = React.useRef(-1);\n  const messageBarRef = React.useRef<HTMLElement | null>(null);\n\n  const [reflowing, setReflowing] = React.useState(false);\n\n  // This layout effect 'sanity checks' what observers have done\n  // since DOM has not been flushed when observers run\n  useIsomorphicLayoutEffect(() => {\n    if (!messageBarRef.current) {\n      return;\n    }\n\n    setReflowing(prevReflowing => {\n      if (!prevReflowing && messageBarRef.current && isReflowing(messageBarRef.current)) {\n        return true;\n      }\n\n      return prevReflowing;\n    });\n  }, [reflowing]);\n\n  const handleResize: ResizeObserverCallback = React.useCallback(() => {\n    if (!messageBarRef.current) {\n      return;\n    }\n\n    const inlineSize = messageBarRef.current.getBoundingClientRect().width;\n    const scrollWidth = messageBarRef.current.scrollWidth;\n\n    const expanding = prevInlineSizeRef.current < inlineSize;\n    const overflowing = inlineSize < scrollWidth;\n\n    setReflowing(!expanding || overflowing);\n  }, []);\n\n  const handleIntersection: IntersectionObserverCallback = React.useCallback(entries => {\n    if (entries[0].intersectionRatio < 1) {\n      setReflowing(true);\n    }\n  }, []);\n\n  const ref = React.useMemo(() => {\n    let resizeObserver: ResizeObserver | null = null;\n    let intersectionObserer: IntersectionObserver | null = null;\n\n    return (el: HTMLElement | null) => {\n      if (!enabled || !el || !targetDocument?.defaultView) {\n        resizeObserver?.disconnect();\n        intersectionObserer?.disconnect();\n        return;\n      }\n\n      messageBarRef.current = el;\n\n      const win = targetDocument.defaultView;\n      resizeObserver = new win.ResizeObserver(handleResize);\n      intersectionObserer = new win.IntersectionObserver(handleIntersection, { threshold: 1 });\n\n      intersectionObserer.observe(el);\n      resizeObserver.observe(el, { box: 'border-box' });\n    };\n  }, [handleResize, handleIntersection, enabled, targetDocument]);\n\n  return { ref, reflowing };\n}\n\nconst isReflowing = (el: HTMLElement) => {\n  return el.scrollWidth > el.offsetWidth || !isFullyInViewport(el);\n};\n\nconst isFullyInViewport = (el: HTMLElement) => {\n  const rect = el.getBoundingClientRect();\n  const doc = el.ownerDocument;\n  const win = doc.defaultView;\n\n  if (!win) {\n    return true;\n  }\n\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (win.innerHeight || doc.documentElement.clientHeight) &&\n    rect.right <= (win.innerWidth || doc.documentElement.clientWidth)\n  );\n};\n"],"names":["useMessageBarReflow","enabled","targetDocument","useFluent","prevInlineSizeRef","React","useRef","messageBarRef","reflowing","setReflowing","useState","useIsomorphicLayoutEffect","current","prevReflowing","isReflowing","handleResize","useCallback","inlineSize","getBoundingClientRect","width","scrollWidth","expanding","overflowing","handleIntersection","entries","intersectionRatio","ref","useMemo","resizeObserver","intersectionObserer","el","defaultView","disconnect","win","ResizeObserver","IntersectionObserver","threshold","observe","box","offsetWidth","isFullyInViewport","rect","doc","ownerDocument","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAIgBA;;;eAAAA;;;;iEAJO;qCACyB;gCACN;AAEnC,SAASA,oBAAoBC,UAAmB,KAAK;IAC1D,MAAM,EAAEC,cAAc,EAAE,GAAGC,IAAAA,uCAAAA;IAC3B,MAAMC,oBAAoBC,OAAMC,MAAM,CAAC,CAAC;IACxC,MAAMC,gBAAgBF,OAAMC,MAAM,CAAqB;IAEvD,MAAM,CAACE,WAAWC,aAAa,GAAGJ,OAAMK,QAAQ,CAAC;IAEjD,8DAA8D;IAC9D,oDAAoD;IACpDC,IAAAA,yCAAAA,EAA0B;QACxB,IAAI,CAACJ,cAAcK,OAAO,EAAE;YAC1B;QACF;QAEAH,aAAaI,CAAAA;YACX,IAAI,CAACA,iBAAiBN,cAAcK,OAAO,IAAIE,YAAYP,cAAcK,OAAO,GAAG;gBACjF,OAAO;YACT;YAEA,OAAOC;QACT;IACF,GAAG;QAACL;KAAU;IAEd,MAAMO,eAAuCV,OAAMW,WAAW,CAAC;QAC7D,IAAI,CAACT,cAAcK,OAAO,EAAE;YAC1B;QACF;QAEA,MAAMK,aAAaV,cAAcK,OAAO,CAACM,qBAAqB,GAAGC,KAAK;QACtE,MAAMC,cAAcb,cAAcK,OAAO,CAACQ,WAAW;QAErD,MAAMC,YAAYjB,kBAAkBQ,OAAO,GAAGK;QAC9C,MAAMK,cAAcL,aAAaG;QAEjCX,aAAa,CAACY,aAAaC;IAC7B,GAAG,EAAE;IAEL,MAAMC,qBAAmDlB,OAAMW,WAAW,CAACQ,CAAAA;QACzE,IAAIA,OAAO,CAAC,EAAE,CAACC,iBAAiB,GAAG,GAAG;YACpChB,aAAa;QACf;IACF,GAAG,EAAE;IAEL,MAAMiB,MAAMrB,OAAMsB,OAAO,CAAC;QACxB,IAAIC,iBAAwC;QAC5C,IAAIC,sBAAmD;QAEvD,OAAO,CAACC;YACN,IAAI,CAAC7B,WAAW,CAAC6B,MAAM,CAAC5B,CAAAA,mBAAAA,QAAAA,mBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,eAAgB6B,WAAW,AAAXA,GAAa;gBACnDH,mBAAAA,QAAAA,mBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,eAAgBI,UAAU;gBAC1BH,wBAAAA,QAAAA,wBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,oBAAqBG,UAAU;gBAC/B;YACF;YAEAzB,cAAcK,OAAO,GAAGkB;YAExB,MAAMG,MAAM/B,eAAe6B,WAAW;YACtCH,iBAAiB,IAAIK,IAAIC,cAAc,CAACnB;YACxCc,sBAAsB,IAAII,IAAIE,oBAAoB,CAACZ,oBAAoB;gBAAEa,WAAW;YAAE;YAEtFP,oBAAoBQ,OAAO,CAACP;YAC5BF,eAAeS,OAAO,CAACP,IAAI;gBAAEQ,KAAK;YAAa;QACjD;IACF,GAAG;QAACvB;QAAcQ;QAAoBtB;QAASC;KAAe;IAE9D,OAAO;QAAEwB;QAAKlB;IAAU;AAC1B;AAEA,MAAMM,cAAc,CAACgB;IACnB,OAAOA,GAAGV,WAAW,GAAGU,GAAGS,WAAW,IAAI,CAACC,kBAAkBV;AAC/D;AAEA,MAAMU,oBAAoB,CAACV;IACzB,MAAMW,OAAOX,GAAGZ,qBAAqB;IACrC,MAAMwB,MAAMZ,GAAGa,aAAa;IAC5B,MAAMV,MAAMS,IAAIX,WAAW;IAE3B,IAAI,CAACE,KAAK;QACR,OAAO;IACT;IAEA,OACEQ,KAAKG,GAAG,IAAI,KACZH,KAAKI,IAAI,IAAI,KACbJ,KAAKK,MAAM,IAAKb,CAAAA,IAAIc,WAAW,IAAIL,IAAIM,eAAe,CAACC,YAAY,AAAZA,KACvDR,KAAKS,KAAK,IAAKjB,CAAAA,IAAIkB,UAAU,IAAIT,IAAIM,eAAe,CAACI,WAAW,AAAXA;AAEzD"}